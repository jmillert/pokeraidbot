# Postgres
#spring.datasource.driverClassName=org.postgresql.Driver
# LOCAL
#spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/
#spring.datasource.username=postgres
#spring.datasource.password=postgres
# HEROKU
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
# IN MEMORY via H2 (Ensure H2 driver depencency in pom.xml is set to compile scope)
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
server.port=${PORT:15000}

# ONLY USE FOR HEROKU
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update

# Show SQL statements in log?
spring.jpa.show-sql=false
# Generate DDL?
spring.jpa.generate-ddl=true

# Datasource connection pool config
spring.datasource.tomcat.max-active=20
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.initialSize=5
spring.datasource.tomcat.max-wait=5000
spring.datasource.tomcat.removeAbandoned=true

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true

